#Banco de dados
spring.datasource.url=jdbc:postgresql://localhost:5432/proposta
spring.datasource.username=${DB_USER:keycloak}
spring.datasource.password=${DB_PASSWORD:password}

#Jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Feign Clients
feign.url-cartao=${URL_SERVICE_CARTAO:http://localhost:8888}
feign.url-analise=${URL_ANALISE_PROPOSTA:http://localhost:9999}

#Health Care
management.endpoints.web.exposure.include=info,health,prometheus, metrics
management.endpoint.prometheus.enabled = true
management.metrics.export.prometheus.enabled = true
management.endpoints.web.cors.allowed-origins=https://localhost:9090.com
management.endpoints.web.cors.allowed-methods=GET
management.endpoints.web.exposure.exclude=env,beans
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

#Scheduled
periodicidade.verifica-cartao-criado=${TEMPO_VERIFICA_CARTAO:10000}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nossa-proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nossa-proposta/protocol/openid-connect/certs}

### OpenTracing ###
# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}


